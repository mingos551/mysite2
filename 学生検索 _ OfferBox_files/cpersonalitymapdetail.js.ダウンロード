$(function() {
  var clConfig = {};
  var styleConfig = {};
  var labelList = {};
  var phaseList = {};
  var yearList = {};
  var selected = {
      style: null,
      type: null
  };
  var $openStyleDistribution_cell = null;

  getPersonalityMapConfig();

  $(document).on('click', '.personality_map_detail_open', function(){
    $openStyleDistribution_cell = $(this).parents().closest('.distribution_cell');
    var style = $(this).parents().closest('.distribution_cell').data('style');
    var type = $(this).parents().closest('.distribution_cell').data('type');
    selected.style = style;
    selected.type = type;
    openDetail(style, type);
  });

  $(document).on('click', '#personality_map_detail_modal .set-style', function(){
    // 分析用と検索用で各々用意
    selectStyleOnDetailModal(selected.style, selected.type)
  });

  /**
   * ラベル絞り込みモーダル
   */
  $('#open_label_filter_modal').click(function() {
    $('#label_filter_modal').show();
  })
  $('#label_filter_modal .close,#label_filter_modal .modal-backdrop').click(function() {
    $('#label_filter_modal').hide();
  })
  $('#label_filter_modal .modal_submit_btn').click(function() {
    $('#label_filter_modal').hide();
  })

  // フェーズ・年度絞り込み
  $(document).on('change', '#personality_map_detail_modal .persons .persons_content .list_outline.student .filter', function(){
    getPersonalityMapDatailFilter();
    getDetailLabelCount();
  });

  // ラベル絞り込み
  $('#label_filter_modal .modal_submit_btn').click(function() {
    getPersonalityMapDatailFilter();
    getDetailLabelCount();
    displaySelectedLabel();
  })

  function getPersonalityMapConfig() {
    $.ajax({
      url: '/api/company/competencesearch/cpersonalitymapcommon/config_data',
      type: 'GET',
      timeout: 5000,
    })
    .done(function(result) {
      setConfig(result.data);
    })
    .fail(function() {
      alert('通信に失敗しました。しばらく経ってから再度お試しいただくか、インターネット環境をご確認ください。');
    });
  }

  function setConfig(data) {
    clConfig = data.cl;
    styleConfig = data.style;
    labelList = data.label;
    phaseList = data.phase;
    yearList = data.year;
  }

  function openDetail(style, type) {
    $('#personality_map_detail_modal .modal-body .description').removeClass('CL1 CL2 CL3 CL4 CL5 CL6 CL7 CL8');
    $('#personality_map_detail_modal .modal-body .description .style').removeClass('style-A style-B style-C style-D style-E');
    $('#personality_map_detail_modal .modal-body .description').addClass(type);
    $('#personality_map_detail_modal .modal-body .description .style').addClass('style-' + style);
    displayPersonalityMapConfig(style, type);
    getPersonalityMapDatail(style, type);
    getDetailLabelCount();
    $('#selected_detaillabel').text('');
  }

  function displayPersonalityMapConfig(style, type) {
    var styleData = styleConfig[style];
    var clData = clConfig[type];

    var title = styleData.title + clData.animal + '（Type' + type.slice(-1) + style + '）';
    $('#personality_map_detail_modal #myModalLabel').html(title);

    $('#personality_map_detail_modal .modal-body .type .type_overview .name').html(clData.animal);
    $('#personality_map_detail_modal .modal-body .type .type_overview .detail').html(clData.role);
    $('#personality_map_detail_modal .modal-body .type .type_description').html(clData.description);
    var clElements = '';
    clData.elements.forEach(function(element) {
        clElements += '<div class="element">' + element + '</div>';
    })
    $('#personality_map_detail_modal .modal-body .type .type_elements .main_elements').html(clElements);

    $('#personality_map_detail_modal .modal-body .style .style_title').html(style + 'スタイル：' + styleData.thinking + '系人材');
    var description = styleData.description;
    var styleElements = '';
    styleData.elements.forEach(function(element) {
        styleElements += '<div class="element">' + element + '</div>';
    })
    $('#personality_map_detail_modal .modal-body .style .style_content').html(description + '<div class="type_elements cognitive_oriented "><div class="main_elements">' + styleElements + '</div></div>');

    var phaseListEl = '';
    Object.keys(phaseList).forEach(function(key) {
        phaseListEl += '<option value="' + key + '" style="text-indent: 0px;">' + phaseList[key] + '</option>';
    })
    $('#personality_map_detail_modal .persons .persons_content .list_outline.student select[name="phase"]').html(phaseListEl);
    var yearListEl = '<option value style="text-indent: 0px;">設定なし</option>';
    Object.keys(yearList).forEach(function(key) {
        yearListEl += '<option value="' + key + '" style="text-indent: 0px;">' + yearList[key] + '</option>';
    })
    $('#personality_map_detail_modal .persons .persons_content .list_outline.student select[name="year"]').html(yearListEl);
    var labelListEl = '';
    Object.keys(labelList).forEach(function(key) {
        labelListEl += '<input id="labeldetail_' + key + '" type="checkbox" class="js-search-label filter" value="' + key + '"/>';
        var labelClass = 'ofb-c-label';
        if (key === '1000') {
            labelClass += ' ofb-c-label__active';
        }
        if (key === '1001') {
            labelClass += ' ofb-c-label__passive';
        }

        labelListEl += '<label for="labeldetail_' + key + '" class="' + labelClass + '"><span class="name">' + labelList[key] + '</span><span id="detail_count_' + key + '"></span></label>';
    })
    $('#label_filter_modal .label-wrapper').html(labelListEl);

    $('#personality_map_detail_modal .persons .persons_content .list_outline.student .total .numbers').html('-');
    $('#personality_map_detail_modal .persons .persons_content .list_outline.employee .total .numbers').html('-');
    $('#personality_map_detail_modal .persons .persons_content .list_outline.student .list .list_content .item').remove();
    $('#personality_map_detail_modal .persons .persons_content .list_outline.employee .list .list_content .item').remove();
  }

  function getPersonalityMapDatail(style, cl) {
    var data = {
        'cl': cl,
        'style': style
    };

    $.ajax({
        url: '/api/company/competencesearch/cpersonalitymapcommon/detail_data',
        type: 'GET',
        dataType: 'json',
        data: data,
        timeout: 5000,
    })
    .done(function(result) {
        displayPersonalityMapDetail(JSON.parse(result.data));
    })
    .fail(function() {
        alert('通信に失敗しました。しばらく経ってから再度お試しいただくか、インターネット環境をご確認ください。');
    });
  }

  function getPersonalityMapDatailFilter() {
    var style = selected.style;
    var cl = selected.type;
    var phase = $('#personality_map_detail_modal .persons .persons_content .list_outline.student select[name="phase"] option:selected').val();
    var labels = getCheckedLabelList();
    var year = $('#personality_map_detail_modal .persons .persons_content .list_outline.student select[name="year"] option:selected').val();

    var data = {
        'cl': cl,
        'style': style,
        'phase': phase,
        'label': labels,
        'year': year
    };

    $.ajax({
        url: '/api/company/competencesearch/cpersonalitymapcommon/detail_reload_data',
        type: 'GET',
        dataType: 'json',
        data: data,
        timeout: 5000,
    })
    .done(function(result) {
        displayPersonalityMapDetail(JSON.parse(result.data));
    })
    .fail(function() {
        alert('通信に失敗しました。しばらく経ってから再度お試しいただくか、インターネット環境をご確認ください。');
    });
  }

  function displayPersonalityMapDetail(data) {
    var studentCount = data.students.count;
    var employeeCount = data.employees.count;
    $('#personality_map_detail_modal .persons .persons_content .list_outline.student .total .numbers').html(studentCount);
    $('#personality_map_detail_modal .persons .persons_content .list_outline.employee .total .numbers').html(employeeCount);
    var studentEl = '';
    if (studentCount > 0) {
        Object.keys(data.students.members).forEach(function(key) {
            var student = data.students.members[key];
            var studentPhotoThumb = student.PHOTOPATH1;
            if (student.data_visible) {
              studentEl += '<a href="/cstudent/prof/' + student.STUDENT_ID + '" target="_blank" class="item"><div class="photo"><img src="' + studentPhotoThumb + '" class="w100"></img></div><div class="prof">';
            } else {
              studentEl += '<a class="item not-link"><div class="photo"><img src="' + studentPhotoThumb + '" class="w100"></img></div><div class="prof">';
            }
            studentEl += '<div class="name bold">' + student.NAME + '</div>';
            if (student.COLLEGE_ID === '773') {
                studentEl += '<div class="college txtcolor-gray">' + student.OTHER_COLLEGE_NAME + '</div>';
            } else {
                studentEl += '<div class="college txtcolor-gray">' + student.COLLEGE_NAME + '</div>';
            }
            studentEl += '</div></a>';
        })
    } else {
        studentEl = '<div>該当者がいません</div>';
    }
    $('#personality_map_detail_modal .persons .persons_content .list_outline.student .list .list_content').html(studentEl);
    var employeeEl = '';
    if (employeeCount > 0) {
        Object.keys(data.employees.members).forEach(function(key) {
            var employee = data.employees.members[key];
            var doneDateArray = employee.done_date.split(' ');
            var doneDate = doneDateArray[0].replace(/-/g, '/');
            employeeEl += '<div class="item"><div class="name bold"><span class="name_text mr10">' + employee.NAME + '</span>';
            if (data.company_member.is_manager) {
              employeeEl += '<a target="_blank" href="/cef1g/result/main/company/' + key +'"><i class="fa fa-bar-chart"></i></a>';
            }
            employeeEl += '</div>';
            employeeEl += '<div class="date">受検日：' + doneDate + '</div></div>';
        })
    } else {
        employeeEl = '<div>該当者がいません</div>';
    }
    $('#personality_map_detail_modal .persons .persons_content .list_outline.employee .list .list_content').html(employeeEl);
  }

  function getDetailLabelCount() {
    var style = selected.style;
    var cl = selected.type;
    var phase = $('#personality_map_detail_modal .persons .persons_content .list_outline.student select[name="phase"] option:selected').val();
    var year = $('#personality_map_detail_modal .persons .persons_content .list_outline.student select[name="year"] option:selected').val();
    var data = {
        'cl': cl,
        'style': style,
        'phase': phase,
        'year': year
    };

    $.ajax({
        url: '/api/company/competencesearch/cpersonalitymap/labelcount',
        type: 'GET',
        dataType: 'json',
        data: data,
        timeout: 5000,
    })
    .done(function(data) {
        displayDetailLabelCount(data.labels_count);
    })
    .fail(function() {
        alert('通信に失敗しました。しばらく経ってから再度お試しいただくか、インターネット環境をご確認ください。');
    });
  }

  function displayDetailLabelCount(labels) {
    Object.keys(labels).forEach(function (key) {
        var changeTextId = '#detail_count_' + key;
        var changeText = '(' + labels[key] + ')';
        $(changeTextId).text(changeText);
    });
  }

  function getCheckedLabelList() {
    var labelList = [];
    $('#label_filter_modal .filter').each(function(){
        var isChecked = $(this).prop('checked');
        if (isChecked) {
            labelList.push(parseInt($(this).val(), 10));
        }
    });
    return labelList;
  }

  function displaySelectedLabel() {
    var labelList = [];
    $('#label_filter_modal .filter').each(function(){
        var isChecked = $(this).prop('checked');
        if (isChecked) {
            labelList.push($(this).next().find('.name').text());
        }
    });
    $('#selected_detaillabel').text(labelList.join(', '));
  }
});
